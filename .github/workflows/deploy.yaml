# .github/workflows/deploy.yaml
name: Deploy to AWS EKS

on:
  push:
    branches: [main]

permissions:
  contents: read

env:
  AWS_REGION: us-west-2
  ECR_REPO: stenny-job-portal
  IMAGE_TAG: ${{ github.sha }}
  CLUSTER_NAME: stenny-eks
  DEPLOYMENT_NAME: job-portal-backend
  NAMESPACE: job-portal

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS identity
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG ./backend
          docker tag $ECR_REPO:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Apply Kubernetes manifests
        run: kubectl apply -f k8s/ -n $NAMESPACE

      - name: Update deployment image
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME $DEPLOYMENT_NAME=${{ steps.login-ecr.outputs.registry }}/$ECR_REPO:$IMAGE_TAG -n $NAMESPACE
          for i in {1..6}; do
            kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE && break
            echo "Waiting for rollout... attempt $i"
            sleep 20
          done
