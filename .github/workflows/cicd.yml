name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-sonar-docker-deploy:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      AWS_REGION: us-west-2
      ECR_REPOSITORY: stenny-job-portal
      CLUSTER_NAME: stenny-eks-cluster
      DEPLOYMENT_NAME: jobportal-deployment
      CONTAINER_NAME: jobportal-container
      IMAGE_TAG: latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # changed from '3.1' to a valid version
          cache: 'pip'

      - name: Install Backend Dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        working-directory: backend
        run: pytest

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=stenny-job-portal
            -Dsonar.organization=your-org-name
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t $DOCKER_USERNAME/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_USERNAME/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$DOCKER_USERNAME/$ECR_REPOSITORY:$IMAGE_TAG

