name: CI/CD Pipeline for Job Portal

on:
  push:
    branches:
      - main

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_REGION: us-west-2
  ECR_REPOSITORY: stenny-job-portal
  CLUSTER_NAME: stenny-eks-cluster
  DEPLOYMENT_NAME: jobportal-deployment
  CONTAINER_NAME: jobportal-container
  IMAGE_TAG: latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run Unit Tests
      run: |
        PYTHONPATH=. pytest

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=iam-rajkumars_stenny-job-portal
          -Dsonar.organization=iam-rajkumars
          -Dsonar.python.coverage.reportPaths=coverage.xml
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dockerize-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Build Docker Image
      run: docker build -t $DOCKER_USERNAME/stenny-job-portal:$IMAGE_TAG .

    - name: Push to DockerHub
      run: docker push $DOCKER_USERNAME/stenny-job-portal:$IMAGE_TAG

  deploy-to-eks:
    runs-on: ubuntu-latest
    needs: dockerize-and-push

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

    - name: Set Image in Deployment YAML
      run: |
        sed -i "s|image:.*|image: $DOCKER_USERNAME/stenny-job-portal:$IMAGE_TAG|g" k8s/deployment.yaml

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

